for the backend create central error handling

GIVE MAX LENGHT FOR THE TITLE and make text area bigger

Make changes on the header and make it fixed/sticky

Clicking a profile (no likes posts)
Commenting on Posts (update post Comments)
Deleting comments on posts (update post Comments)
Comment when logged out Should display Sign Up page (can write comment and displays image)
Like on post when logged out Should display Sign Up page
Like on dashboard when logged out Should display Sign Up page

Make the wabsite responsive

Loading State 

PAGES 

1. Home 
2. Signup 
3. Login 
4. User 
5. Create Meme
6. Meme
7. Update Meme

----------------------

COMPONENTS

Header 
MemeList
Meme


//request
const getAllProjects = () => {
  // Get the token from the localStorage
  const storedToken = localStorage.getItem("authToken");
 
  // Send the token through the request "Authorization" Headers
  axios
    .get(
    `${API_URL}/api/projects`,
    { headers: { Authorization: `Bearer ${storedToken}` } }
  )
    .then((response) => setProjects(response.data))
    .catch((error) => console.log(error));
};


//request
const getProject = () => {
  // Get the token from the localStorage
  const storedToken = localStorage.getItem("authToken");
 
  // Send the token through the request "Authorization" Headers
  axios
    .get(
      `${API_URL}/api/projects/${projectId}`,
      { headers: { Authorization: `Bearer ${storedToken}` } }
    )
    .then((response) => {
      const oneProject = response.data;
      setProject(oneProject);
    })
    .catch((error) => console.log(error));
};


//request
const handleSubmit = (e) => {
  e.preventDefault();
  const requestBody = { title, description };
 
  // Get the token from the localStorage
  const storedToken = localStorage.getItem('authToken');
 
  // Send the token through the request "Authorization" Headers
  axios
    .post(
    `${API_URL}/api/projects`,
    requestBody,
    { headers: { Authorization: `Bearer ${storedToken}` } }
  )
    .then((response) => {
    // Reset the state
    setTitle("");
    setDescription("");
    props.refreshProjects();
  })
    .catch((error) => console.log(error));
};